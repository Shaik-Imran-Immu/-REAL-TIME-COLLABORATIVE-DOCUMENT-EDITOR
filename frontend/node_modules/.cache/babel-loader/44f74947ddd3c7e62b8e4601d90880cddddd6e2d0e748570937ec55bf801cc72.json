{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shaik\\\\OneDrive\\\\Desktop\\\\T3\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { io } from 'socket.io-client';\n\n// Connect to backend server (make sure it's running!)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:5000');\nfunction App() {\n  _s();\n  const [text, setText] = useState('');\n\n  // Load initial document and listen for updates\n  useEffect(() => {\n    // Load initial content\n    socket.on('load-document', documentText => {\n      setText(documentText);\n    });\n\n    // Listen for incoming changes from others\n    socket.on('receive-changes', newText => {\n      setText(newText);\n    });\n\n    // Cleanup listeners when component unmounts\n    return () => {\n      socket.off('load-document');\n      socket.off('receive-changes');\n    };\n  }, []);\n\n  // When user types, send it to server\n  const handleChange = e => {\n    const newValue = e.target.value;\n    setText(newValue);\n    socket.emit('send-changes', newValue); // Emit to backend\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '30px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uD83D\\uDCDD Collaborative Document Editor\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      style: {\n        width: '100%',\n        height: '300px',\n        fontSize: '16px'\n      },\n      value: text,\n      onChange: handleChange,\n      placeholder: \"Start typing...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"4ujWDM02ns4tez/JXYjL1bw6ipA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","io","jsxDEV","_jsxDEV","socket","App","_s","text","setText","on","documentText","newText","off","handleChange","e","newValue","target","value","emit","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","width","height","fontSize","onChange","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/shaik/OneDrive/Desktop/T3/frontend/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { io } from 'socket.io-client';\r\n\r\n// Connect to backend server (make sure it's running!)\r\nconst socket = io('http://localhost:5000');\r\n\r\nfunction App() {\r\n  const [text, setText] = useState('');\r\n\r\n  // Load initial document and listen for updates\r\n  useEffect(() => {\r\n    // Load initial content\r\n    socket.on('load-document', (documentText) => {\r\n      setText(documentText);\r\n    });\r\n\r\n    // Listen for incoming changes from others\r\n    socket.on('receive-changes', (newText) => {\r\n      setText(newText);\r\n    });\r\n\r\n    // Cleanup listeners when component unmounts\r\n    return () => {\r\n      socket.off('load-document');\r\n      socket.off('receive-changes');\r\n    };\r\n  }, []);\r\n\r\n  // When user types, send it to server\r\n  const handleChange = (e) => {\r\n    const newValue = e.target.value;\r\n    setText(newValue);\r\n    socket.emit('send-changes', newValue); // Emit to backend\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: '30px' }}>\r\n      <h1>üìù Collaborative Document Editor</h1>\r\n      <textarea\r\n        style={{ width: '100%', height: '300px', fontSize: '16px' }}\r\n        value={text}\r\n        onChange={handleChange}\r\n        placeholder=\"Start typing...\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,EAAE,QAAQ,kBAAkB;;AAErC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,MAAM,GAAGH,EAAE,CAAC,uBAAuB,CAAC;AAE1C,SAASI,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;;EAEpC;EACAD,SAAS,CAAC,MAAM;IACd;IACAK,MAAM,CAACK,EAAE,CAAC,eAAe,EAAGC,YAAY,IAAK;MAC3CF,OAAO,CAACE,YAAY,CAAC;IACvB,CAAC,CAAC;;IAEF;IACAN,MAAM,CAACK,EAAE,CAAC,iBAAiB,EAAGE,OAAO,IAAK;MACxCH,OAAO,CAACG,OAAO,CAAC;IAClB,CAAC,CAAC;;IAEF;IACA,OAAO,MAAM;MACXP,MAAM,CAACQ,GAAG,CAAC,eAAe,CAAC;MAC3BR,MAAM,CAACQ,GAAG,CAAC,iBAAiB,CAAC;IAC/B,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMC,YAAY,GAAIC,CAAC,IAAK;IAC1B,MAAMC,QAAQ,GAAGD,CAAC,CAACE,MAAM,CAACC,KAAK;IAC/BT,OAAO,CAACO,QAAQ,CAAC;IACjBX,MAAM,CAACc,IAAI,CAAC,cAAc,EAAEH,QAAQ,CAAC,CAAC,CAAC;EACzC,CAAC;EAED,oBACEZ,OAAA;IAAKgB,KAAK,EAAE;MAAEC,OAAO,EAAE;IAAO,CAAE;IAAAC,QAAA,gBAC9BlB,OAAA;MAAAkB,QAAA,EAAI;IAAgC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACzCtB,OAAA;MACEgB,KAAK,EAAE;QAAEO,KAAK,EAAE,MAAM;QAAEC,MAAM,EAAE,OAAO;QAAEC,QAAQ,EAAE;MAAO,CAAE;MAC5DX,KAAK,EAAEV,IAAK;MACZsB,QAAQ,EAAEhB,YAAa;MACvBiB,WAAW,EAAC;IAAiB;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACnB,EAAA,CAxCQD,GAAG;AAAA0B,EAAA,GAAH1B,GAAG;AA0CZ,eAAeA,GAAG;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}